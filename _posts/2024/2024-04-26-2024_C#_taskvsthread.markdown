---
layout: page
title:  Task.Run  和 new Thread 有什么区别
category: 技术
tags: C#
---
{% include JB/setup %}

`Task.Run`和`new Thread`都可以用来在不同的线程中执行代码，但它们之间有几个重要的区别：

1. **线程池 vs. 新线程**:
   - `Task.Run`使用线程池中的线程来执行任务。线程池是一组预先创建的线程，可以重复使用，这有助于减少线程创建和销毁的开销，并且可以更有效地利用系统资源。
   - `new Thread`创建一个新的线程，每次调用都会创建一个新的线程对象。这意味着使用`new Thread`创建的线程不会从线程池中获取线程，而是每次都会消耗系统资源创建一个新的线程。

2. **任务管理**:
   - `Task.Run`返回一个`Task`对象，可以使用`async/await`等语法来管理异步操作。`Task`对象提供了丰富的API，可以用于等待任务完成、处理异常等。
   - `new Thread`创建的线程返回一个`Thread`对象，它相对较简单，并且没有像`Task`那样丰富的任务管理功能。通常，`Thread`对象的使用更为底层，需要手动管理线程的生命周期。

3. **适用场景**:
   - `Task.Run`适合于执行异步操作，特别是对于IO密集型任务，因为它可以利用异步编程的优势，将任务挂起而不阻塞线程。
   - `new Thread`通常用于需要更多控制、更底层的线程管理场景，或者是一些不适合异步操作的情况，比如需要长时间运行的计算密集型任务。

综上所述，如果你只是想在后台执行一些任务，并且不需要直接操作线程，通常情况下建议使用`Task.Run`，因为它更简单、更有效，并且提供了更好的异步编程支持。而如果你需要更多的线程控制或者对线程池的使用有特殊要求，那么你可能需要使用`new Thread`。
