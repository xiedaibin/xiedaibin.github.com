---
layout: page
title:   Docker 构建 .NET Core 项目时还原 NuGet 非常慢的处理方法
category: 技术
tags: C#
---
{% include JB/setup %}
###

在使用 Docker 构建 .NET Core 项目时，有时候会遇到还原 NuGet 包非常慢的问题。下面是解决这一问题的方法，通过修改 NuGet.Config 文件来使用缓存镜像地址，可以显著提高 NuGet 包的还原速度。

## 步骤

### 1. 找到 NuGet.Config 文件

在不同的操作系统上，NuGet.Config 文件的位置不同：

- **Windows**: `%appdata%\NuGet\NuGet.Config`
- **Linux**: `~/.config/NuGet/NuGet.Config`

### 2. 更改为缓存镜像地址

将 NuGet 包源地址更改为缓存镜像地址。例如，将默认的 `https://api.nuget.org` 更改为 `https://nuget.cdn.azure.cn/`。

修改后的 `NuGet.Config` 文件内容如下：

```xml
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <add key="nuget.org" value="https://nuget.cdn.azure.cn/v3/index.json" protocolVersion="3" />
    <add key="TencentCloud" value="https://mirrors.cloud.tencent.com/nuget/"/>
    <add key="nuget.azure.cn" value="https://nuget.cdn.azure.cn/v3/index.json" protocolVersion="3" />
  </packageSources>
</configuration>
```

### 3. 应用更改(可不设置)

将修改后的 `NuGet.Config` 文件放置在项目的根目录或者指定的路径下。在构建 Docker 镜像时，可以将此文件复制到 Docker 容器中，确保在还原 NuGet 包时使用配置的缓存镜像地址。

例如，在 Dockerfile 中添加以下命令：

```dockerfile
# 将本地的 NuGet.Config 文件复制到容器中
COPY NuGet.Config /root/.nuget/NuGet/NuGet.Config

# 其他 Dockerfile 指令
```

## 总结

通过上述步骤，我们可以将 NuGet 的包源地址更改为较快的缓存镜像地址，从而提高 Docker 构建 .NET Core 项目时还原 NuGet 包的速度。这不仅能节省时间，还能提升构建过程的效率。
